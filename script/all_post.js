document.write("<aside id = \"post_nav\">")
document.write("  <ul id=\"post_nav_0\" class=\"text-margin-tl\"><a href=\"#\", style=\"margin-right:4rem\" >git操作</a></ul>");
document.write("  <ul id=\"post_nav_1\" class=\"text-margin-l\"><a href=\"#\" , style=\"margin-right:4rem\" >前端html</a></ul>");
document.write("  <ul id=\"post_nav_2\" class=\"text-margin-l\"><a href=\"#\" , style=\"margin-right:4rem\" >js相关记录</a></ul>");
document.write("  <ul id=\"post_nav_3\" class=\"text-margin-bl\"><a href=\"#\" , style=\"margin-right:4rem\">python正则表达式</a></ul>");
document.write("</aside>")
document.write("<article class=\"blog-post\" id=\"post_0\">");
document.write("    <h2>git操作</h2>");
document.write("    <p class=\"post-date\">2025年02月06日</p>");
document.write("<div id=\"post_content_0\" style=\"display:none\" >");
document.write('<p><strong>github与本地git管理</strong></p>');
document.write('<p>github在2021.08.13之后不再支持密码方式认证，可以通过SSH认证完成本地git仓库的上传</p>');
document.write('<p>1、需要修改本地仓库中的.git/config 中的URL路径，不再使用https而是使用git@github.com:xxxx/xxxxx.git的SSH地址（注意不加ssh://，直接从github网页copy）</p>');
document.write('<p>2、在本地的terminal下 ssh-keygen -t ed25519 -C "your_email@example.com"，来生成对应的SSH公钥和私钥文件（注意密钥文件的权限，777将无法使用，chmod 到600）</p>');
document.write('<p>3、eval "$(ssh-agent -s)"启动ssh服务</p>');
document.write('<p>4、ssh-add ~/.ssh/私钥文件</p>');
document.write('<p>5、在git hub setting中的的SSH keys增加相应的公钥文件中的内容</p>');
document.write('<p>6、稍等后完成，可以通过 ssh -vT git@github.com 来测试当前的连通</p>');
document.write('<p><strong>git个人命令整理</strong></p>');
document.write('<p>git pull --rebase</p>');
document.write('<p>git push  </p>');
document.write('<p>git tag</p>');
document.write('<p>git stash</p>');
document.write('<p>git stash pop</p>');
document.write('<p>git reset --hard origin/master 慎用</p>');
document.write('<p>git checkout . #本地所有修改的。没有的提交的，都返回到原来的状态</p>');
document.write('<p>git stash #把所有没有提交的修改暂存到stash里面。可用git stash pop回复。</p>');
document.write('<p>git reset --hard HASH #返回到某个节点，不保留修改，已有的改动会丢失。</p>');
document.write('<p>git reset --soft HASH #返回到某个节点, 保留修改，已有的改动会保留，在未提交中，</p>');
document.write('<p>git status或git diff可看。</p>');
document.write('<p>git clean -df #返回到某个节点，（未跟踪文件的删除）</p>');
document.write('<p>git clean 参数 -n 不实际删除，只是进行演练，展示将要进行的操作，有哪些文件将要被删除。（可先使用该命令参数，然后再决定是否执行） </p>');
document.write('<pre><code>           -f 删除文件\n</code></pre>');
document.write('<pre><code>           -i 显示将要删除的文件\n</code></pre>');
document.write('<pre><code>           -d 递归删除目录及文件（未跟踪的）\n</code></pre>');
document.write('<pre><code>           -q 仅显示错误，成功删除的文件不显示\n</code></pre>');
document.write('<pre><code>           注： git reset 删除的是已跟踪的文件，将已commit的回退。 git clean 删除的是未跟踪的文件\n</code></pre>');
document.write('<p>git rebase -i HEAD~3：合并3笔提交</p>');
document.write('<p>git diff --name-only</p>');
document.write('<p>git diff --stat 简略信息</p>');
document.write("</div>");
document.write("</article>");
document.write("<article class=\"blog-post\" id=\"post_1\">");
document.write("    <h2>前端html</h2>");
document.write("    <p class=\"post-date\">2025年02月17日</p>");
document.write("<div id=\"post_content_1\" style=\"display:none\" >");
document.write('<p><strong>html布局</strong></p>');
document.write('<p>在html的左右布局中，可以使用display:flex属性来使对应的元素弹性布局，从而便于自适应</p>');
document.write("</div>");
document.write("</article>");
document.write("<article class=\"blog-post\" id=\"post_2\">");
document.write("    <h2>js相关记录</h2>");
document.write("    <p class=\"post-date\">2025年02月18日</p>");
document.write("<div id=\"post_content_2\" style=\"display:none\" >");
document.write('<p><strong>js脚本相关</strong></p>');
document.write('<p>可使用如下代码为元素增加相应的事件例如click,resize,onload等</p>');
document.write('<p>添加成功后在chorme的 f12调试工具中可以看到对应的事件监视器，若未成功添加，则有可能存在：</p>');
document.write('<p>1、对应元素未找到</p>');
document.write('<p>2、script代码本身存在问题</p>');
document.write('<p>3、父元素屏蔽了event</p>');
document.write('<pre><code>post_nav_display();\n</code></pre>');
document.write('<pre><code>window.addEventListener("resize",post_nav_display);\n</code></pre>');
document.write('<pre><code>function post_nav_display()\n</code></pre>');
document.write('<pre><code>{\n</code></pre>');
document.write('<pre><code>    var post_nav = document.getElementById("post_nav");\n</code></pre>');
document.write('<pre><code>    if(post_nav.clientWidth &lt; 150){\n</code></pre>');
document.write('<pre><code>        post_nav.style.visibility = "hidden";\n</code></pre>');
document.write('<pre><code>    }\n</code></pre>');
document.write('<pre><code>    else {\n</code></pre>');
document.write('<pre><code>        post_nav.style.visibility = "visible";\n</code></pre>');
document.write('<pre><code>    }\n</code></pre>');
document.write('<pre><code>}\n</code></pre>');
document.write("</div>");
document.write("</article>");
document.write("<article class=\"blog-post\" id=\"post_3\">");
document.write("    <h2>python正则表达式</h2>");
document.write("    <p class=\"post-date\">2025年02月19日</p>");
document.write("<div id=\"post_content_3\" style=\"display:none\" >");
document.write('<p><strong>re.findall(pattern,text)</strong></p>');
document.write('<p>matches = re.findall(pattern, text)</p>');
document.write('<p>matches结果为列表</p>');
document.write('<p>(-\\w+): 匹配键，形如 -key。</p>');
document.write('<p>(.*?): 非贪婪地捕获内容，直到下一个键开始或字符串结束。</p>');
document.write('<p>(?= -\\w+|$): 使用前瞻确保匹配内容直到下一个键 -key 或字符串结束。</p>');
document.write("</div>");
document.write("</article>");
